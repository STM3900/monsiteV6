[
  {
    "name": "Wicook",
    "url": "",
    "category": "Projet perso",
    "link": "https://theomigeat.com/wicook/",
    "imgColor": "wicookLogo",
    "background": "",
    "finishDate": "11/05/2021",
    "workTime": "43h18m",
    "shortDescription": "Wicook est un site de cuisine communautaire, fait en nuxt.js (framework de vue.js), où tout le monde peut poster ses recettes en utilisant un json modèle"
  },
  {
    "name": "Asteroids",
    "url": "asteroids",
    "category": "Projet d'école",
    "link": "http://theo.anawens.fr/",
    "imgColor": "asteroidsLogo",
    "background": "asteroids",
    "finishDate": "31/03/2021",
    "workTime": "72h20m",
    "shortDescription": "Réalisé en phaser.js, pour un projet d'école, Asteroids est un jeu où vous contrôlez un petit vaiseau qui doit faire le meilleur score, en détruisant le plus d'astéroides avant d'être à court de vies. Aidez-vous de votre SuperTir et du SuperCombo pour faire des ravages !",
    "description": "Pour ce projet d'école, le sujet était tout simplement, en utilisant Phaser.io un framework JavaScript, de faire un jeu.\nNous avons carte blanche sur le type de jeu et ce que l'on allait créer N'ayant pas trop d'idées au départ, je me suis souvenu des jeux d'arcades auquel j'aimais bien jouer quand j'étais plus jeune, et je me suis souvenu d'Asteroids, un jeu où l'on contrôle un petit vaisseau de pixel et ou l'objectif et d'exploser le plus d'astéroïdes possibles tout en faisant attention à ne pas se les prendre. J'ai décidé de partir sur cette idée et de refaire le jeu depuis zéro en y ajoutant plus de fonctionnalités !",
    "objectives": ["Faire un jeu de A à Z", "Se donner à fond dans un projet"],
    "languages": ["Phaser.js", "Node.js", "Html/Css"],
    "softwares": ["VSCode", "GitHub"],
    "technicalDescription": "Le jeu propose plusieurs fonctionnalités :\n\n- Tout d'abord, quand le joueur lance la partie, il possède 3 vies, si il les perd, la partie est terminée\n- Le joueur peut se déplacer uniquement en avant, mais peut orienter la direction de son vaisseau. Les astéroïdes se déplacent uniquement en ligne droite, avec un angle défini aléatoirement qui reste fixe\n- Le joueur peut tirer son vaisseau et ainsi détruire des astéroïdes. Lui permettant de gagner des points, mais divisant aussi les astéroïdes en petits morceaux\n- Une fois par vie, le joueur peut utiliser son SuperTir, qui détruit tout ennemi en ligne droite pendant un court instant\n- Pour gagner plus de points, le joueur peut augmenter son combo s'il ne rate pas sa cible à plusieurs reprises. Au bout de 10 astéroïdes touchés d'affilé, le joueur obtient le SuperCombo, qui augmente considérablement sa cadence de tir\n\nLe jeu possède aussi un système de classement, qui n'est pas accessible dans la version publique. Celui-ci enregistre les 5 meilleurs scores.",
    "difficulties": "Comme difficultés pour ce projet, il y avait tout d'abord le fait de devoir apprendre depuis zéro un nouveau framework, pas si bien documenté que ça. Et ensuite, faire l'api du système de classement.\nComme axe d'amélioration, j'aurais aimé ajouter encore plus de fonctionnalité, comme par exemple un système ou le jeu s'adapterait en fonction d'une musique.",
    "conclusion": "Asteroids a été le plus gros projet que j'ai fait en cette année 2021, et sûrement l'un de ceux où j'ai pris le plus de plaisir à le faire !"
  },
  {
    "name": "Wikigame",
    "url": "wikigame",
    "category": "Projet d'école",
    "link": "https://github.com/STM3900/Wikigame",
    "imgColor": "wikigameLogo",
    "background": "wikigame",
    "finishDate": "20/02/2021",
    "workTime": "44h06m",
    "shortDescription": "Wikigame est un petit jeu en python se basant sur le jeu de wikipédia ! L'objectif du jeu est d'aller d'une page A à une page B (donnés aléatoirement) en moins de coups possibles, et en ne passant que par des liens wikipédia.",
    "description": "Wikigame est un petit jeu en python se basant sur le jeu de wikipédia ! L'objectif du jeu est d'aller d'une page A à une page B (donnés aléatoirement) en moins de coups possibles, et en ne passant que par des liens wikipédia.",
    "objectives": [
      "Pouvoir mettre en pratique ce que j'avais appris en Python",
      "Faire un projet visuelement simple mais agréable à regarder"
    ],
    "languages": ["Python", "Html/Css"],
    "softwares": ["VSCode", "GitHub"],
    "technicalDescription": "Le site fonctionne suivant cet ordre :\n\n- Tout d'abord le site choisit deux bornes : une de début et une de fin, (par exemple Gnocchi en début et Grenoble en fin) en se basant sur une page sélectionnée aléatoirement\n- Le site génère ensuite la variable du compteur, et \"scanne\" la page wikipédia de l'article et extrait tous ses liens valides (pas de doublons, pas d'hyperliens, que ceux dans une certaine zone)\n- Avec les liens extrait, le site génère sa page, en affichant le nom de l'article, le nombre de coups, une courte description, puis enfin, tous les liens\n- Quand l'utilisateur clique sur un lien, le site compare si sa destination correspond à la borne de fin, si c'est le cas, la partie est gagné et un message de victoire apparaît, ainsi que le nombre de cours que l'utilisateur a fait\n- Mais si la destination ne correspond pas, le site ajoute 1 au compteur et l'amène sur la page, en procédant de la méthode que celle de l'étape 2 et 3\n- L'utilisateur peut aussi revenir en arrière d'une, ou plusieurs pages, mais celui-lui coûtera 2 coups.",
    "difficulties": "La principale difficulté de ce projet était le système d'extraction de liens sur une page wikipédia, qui m'a posé pas mal de difficultés.\n\nLe temps aussi a joué contre moi, je n'ai pas pu implémenter toutes les idées que j'avais en tête comme par exemple un meilleur historique de page et une navigation plus fluide entre les pages.",
    "conclusion": "En conclusion, ce projet était très agréable à faire, et m'a permis d'apprendre beaucoup d'éléments en python !"
  },
  {
    "name": "Jourbon",
    "url": "",
    "category": "Projet perso",
    "link": "https://theomigeat.com/Jourbon/",
    "imgColor": "#ef476f",
    "background": "",
    "finishDate": "30/05/2020",
    "workTime": "6h",
    "shortDescription": "Générateur prenant un mot (que l'on peut changer) et qui mélange ses lettres aléatoirement pour en faire un qui a plus ou moins de sens"
  },
  {
    "name": "Lazublog",
    "url": "",
    "category": "projet perso",
    "link": "https://theomigeat.com/LazuBlog/",
    "imgColor": "lazulogo",
    "background": "lazublog",
    "finishDate": "20/03/2020",
    "workTime": "30h40m",
    "shortDescription": "Conçu pour la sortie du jeu \"Animal Crossing : New Horizon\" Lazublog est un petit blog où je partage mon aventure sur le jeu, avec une pointe de fiction !"
  },
  {
    "name": "Breaking Bot",
    "url": "breakingbot",
    "category": "Projet perso",
    "link": "https://mrgove10.itch.io/breaking-bots",
    "imgColor": "BrLogo",
    "background": "Br",
    "finishDate": "09/02/2020",
    "workTime": "2 Jours Non-Stop",
    "shortDescription": "Créé pendant la Scientific Game Jam de 2020, dans une équipe de 8, Breacking Bot nous met dans la peau de Stein, le premier robot géologue qui doit dater les gisements métalliques en cherchant et analysant un minerai datable dans les roches Monazite avant que celui-ci soit hors service !",
    "description": "Créé pendant la Scientific Game Jam de 2020, dans une équipe de 8, Breacking Bot nous met dans la peau de Stein, le premier robot géologue qui doit dater les gisements métalliques en cherchant et analysant un minerai datable dans les roches Monazite avant que celui-ci soit hors service !\n\nLa Scientific Game Jam consiste à développer un jeu complet en 48h, qui illustre le sujet de thèse du doctorant qui fait parti de l'équipe. Cette année, j'ai eu la chance d'être dans une grande équipe de 7 personnes très talentueuses et très bienveillante ! Mon rôle pendant cette game jam était celui de développeur (étonnant, n'est-ce pas ?)\nJe devais donc, en me basant sur les idées du game designer, et à partir des assets créés par les artistes, donner vie à un jeu, en moins de 48 heures.",
    "objectives": [
      "Faire un jeu fonctionnel en moins de 48h",
      "Rencontrer des personnes talentueuses dans des dommaines autre que l'informatique",
      "Passer un moment inoubliable"
    ],
    "languages": ["C#"],
    "softwares": ["Unity", "Visual Studio", "GitHub"],
    "technicalDescription": "Pour le développement du jeu, nous sommes naturellement partis sur le logiciel Unity, que nous avons déjà utilisé lors des précédentes Game Jam, permettant d'écrire le jeu en C#. Nous avons aussi utilisé GitHub pour pouvoir collaborer ensemble sur le même projet.\n\nLe jeu comporte différentes phases. Tout d'abord celle d'exploration, on l'on se balade sur la surface d'une planète, ou notre objectif et de trouver des gisements à miner. Pour cela, il suffit de rester attentif à la musique du jeu qui varie en fonction du type de minerai. Ensuite, il faut miner le minerait en martelant la touche espace, puis l'analyser et le classer, pour enfin marquer des points, et recommencer l'opération jusqu'à la fin du temps imparti.",
    "difficulties": "Tout comme chaque Game Jam, la difficulté majeure du projet et bien sur le temps.\nOu l'on se rend compte que 48h pour faire un jeu, c'est très peu. Il y a aussi la gestion de la fatigue qui joue beaucoup dans le développement, ou se pose le dilemme de dormir plus et moins coder, ou dormir moins et avoir plus de temps de dev, mais avec un risque d'erreur beaucoup plus élevé. En parlant d'erreurs, nous avons eu quelques soucis avec GitHub ce qui nous a fait perdre quelques heures. Un axe d'amélioration serait pour ma part de gérer mieux mon temps de travail et de repos.",
    "conclusion": "En conclusion, cette Game Jam a été un moment inoubliable, remplie de bons souvenirs, et j'espère pouvoir en refaire une prochainement !"
  },
  {
    "name": "Apocalypse Not Now",
    "url": "",
    "category": "Projet perso",
    "link": "https://manfredhq.itch.io/apocalypsenotnow",
    "imgColor": "ANNLogo",
    "background": "ANN",
    "finishDate": "02/02/2020",
    "workTime": "2 Jours Non-Stop",
    "shortDescription": "Créé pendant la Global Game Jam de 2020, dans une équipe de 5, Apocalypse Not Now est un jeu dont le but est de surmontrer les nombreux cataclysmes présents sur la Terre"
  },
  {
    "name": "MusicHours",
    "url": "musichours",
    "category": "Projet perso",
    "link": "https://theomigeat.com/MusicHours/",
    "imgColor": "MusicHoursLogo",
    "background": "MusicHours",
    "finishDate": "24/12/2020",
    "workTime": "72h19m",
    "shortDescription": "MusicHours est un site vous permettant, à partir d'une ville de votre choix, d'avoir une musique et un thème s'adaptant à l'heure et à la météo de celle-ci !",
    "description": "MusicHours est un site vous permettant, à partir d'une ville de votre choix, d'avoir une musique et un thème s'adaptant à l'heure et à la météo de celle-ci !\n\nCe projet est né fin 2019, pendant les vacances de la toussaint, suite à une idée que j'avais, mais que je ne pouvais pas réaliser avant d'avoir appris le langage JavaScript.\nCette idée, venait tout droit des jeux vidéo de la série d'Animal Crossing, ou la musique diffusée en jeu, change toutes les heures, s'adaptant aux différentes ambiances qu'il peut y avoir dans une journée. Etant fan de cet attribut, assez unique en son genre, j'ai eu l'idée de faire un site qui pourrait jouer une musique, en fonction de l'heure à laquelle nous sommes, et lui donner une allure assez agréable à regarder pour pouvoir le faire tourner en fond.\n\nC'est donc dans cette idée que je me suis lancé sur le développement du site, en me mettant en tête que ce ne serait qu'un petit projet qui ne prendrait pas beaucoup de temps. Au final, MusicHours fut le plus gros projet que j'ai pu faire en informatique, avec plus de 70 heures de dev, et surtout qui m'a permis d'apprendre énormément d'éléments en js.",
    "objectives": [
      "Expérimenter de nouvelles choses en JS",
      "Surpasser mes limites en CSS",
      "Se connecter à une API et l'utiliser"
    ],
    "languages": ["JavaScript", "Html/Css"],
    "softwares": ["VSCode", "GitHub"],
    "technicalDescription": "Au départ le site ne devait jouer de la musique qu'en fonction de l'heure. Je suis donc parti sur un système très simple qui consistait juste à mettre 24 musiques mp3 dans un dossier, ou elles étaient nommées d'un nombre entre 0 et 23, et d'en fonction de l'heure de notre pc, chargé celle qui correspondait.\n\nEt voilà, j'avais donc fini mon site en quelques heures ! Mais bon je ne voulais pas vraiment en rester là. J'ai donc voulu ajouter des fonctionnalités. J'ai donc ajouté un cycle d'aurore / jour / crépuscule / nuit au site, puis ensuite un soleil et une lune qui bougeait en fonction de l'heure.\nÉtant assez satisfait du site, je me suis dit que je pouvais en rester la, et j'ai eu une idée qui a allongé le temps de développement de 60 heures : celle de faire en sorte que le site réagisse en fonction de la météo d'une ville rentrée.\nAyant une expérience d'environ 2 semaines en javascript, je n'avais absolument aucune idée de comment réaliser cette action, et en demandant à des amis et en suivant des tutos, j'ai donc compris que je devrais utiliser une api, qui me permettrait de récupérer les données météorologiques d'une ville donnée. Et cette api vient directement du site https://openweathermap.org/, qui propose une api gratuite, et avec le recul, pas très dure à utiliser.\n\nAvec donc cette api, et des heures de galères, j'avais réussi à faire en sorte que le site réagisse quand il pleuvait dans une ville fixe.\nMais je me suis dit qu'il était dommage d'arrêter là, et j'ai donc fait en sorte que l'utilisateur puisse choisir sa ville, puis ensuite que le site réagisse à plus de météos différentes (orage, brouillard, neige), ainsi que des variantes de musiques en fonction de la météo (la bande son du jeu Animal Crossing : New Leaf possède des musiques prévues quand il pleut, ou neige). Mais voulant toujours ajouter des fonctionnalités au site, j'ai vu qu'il était possible de récupérer le fuseau horaire de la ville, en plus de sa météo. J'ai donc fait en sorte que l'heure affichée sur le site s'adapte automatiquement à celle de la ville, en plus d'avoir rajouté des variantes de style par rapport aux saisons.\n\nEt c'est comme ça que ce site qui n'était qu'au départ, un petit projet à vu le jour !",
    "difficulties": "Ce projet a été l'un des plus durs que j'ai pu faire dans ma vie d'étudiant en seconde année, car il me confrontait en permanence sur des problèmes sur lesquels je n'avais strictement aucune idée de comment faire pour les résoudre.\n\nMais les plus grosses difficultés de ce projet était la connexion à l'api, la récupération et le traitement des données reçues. Bien que je sois assez satisfait du site, il y a une multitude d'éléments qui peuvent être améliorés, comme par exemple :\n\n- Utiliser un meilleur système pour traiter les musiques, autre que de toutes les stocker dans un dossier et les sélectionner dynamiquement\n- Écrire le code d'une manière plus propre, dans différents dossiers et avec plus de fonctions\n- Améliorer le site de façon générale\n\n En fait, j'aimerais beaucoup faire une nouvelle version de ce site, à partir de zéro, qui serait plus belle, plus détaillée, avec plus de fonctionnalités (comme par exemple de prendre en compte le vent des villes pour faire bouger les arbres, etc.), mais je n'en ai pas encore les compétences !",
    "conclusion": "En conclusion MusicHours à été sans doute le projet le plus agréable et formateur de cette seconde année d'école. Il 'm'a permis d'apprendre vraiment beaucoup de fonctionnalités en js et il était vraiment satisfaisant d'arriver à faire des choses que l'ont pensait impossible 10 heures plus tôt, en prenant juste le temps de chercher et de ne pas hésiter à demander de l'aide à des personnes plus fortes que soit pour avoir des avis et des indices de comment faire !"
  },
  {
    "name": "BeeLeave",
    "url": "",
    "category": "Projet d'école",
    "link": "https://little-rpg.fr/workshop/beeleave/public/index.php",
    "imgColor": "#1c2230",
    "background": "BeeLeave",
    "finishDate": "13/09/19",
    "workTime": "5 Jours de projet",
    "shortDescription": "Conçu pendant un Workshop : Une semaine de cours banalisée pour faire un projet, en équipe de 5. BeeLeave est une plateforme sur laquelle, en créant un compte, il est possible de créer des évènements, des groupes et de discuter avec les membres présents dedans."
  },
  {
    "name": "AuphysWorks",
    "url": "",
    "category": "Projet d'entreprise",
    "link": "https://auphys.axsiow.ovh/",
    "imgColor": "#95c11c",
    "background": "",
    "finishDate": "06/2019",
    "workTime": "Sujet de mission du stage de 1ère année",
    "shortDescription": "AuphysWorks est un site vitrine réalisé avec Enzo Fogliano lors de notre stage de première année. Son but est de présenter dans un design accueillant et responsive, les futurs services proposées ainsi que de mettre à disposition un formulaire de contact pour permettre aux visiteurs de contacter rapidement l'entreprise."
  },
  {
    "name": "Hero And Monsters",
    "url": "",
    "category": "Projet d'école",
    "link": "https://theomigeat.com/medias/files/Projet.exe",
    "imgColor": "#000000",
    "background": "",
    "finishDate": "30/04/19",
    "workTime": "40h",
    "shortDescription": "Réalisé au cours d'un projet scolaire, Hero and Monsters est un petit jeu développé en C++, dans le but de nous apprendre à faire de la programmation orientée objet (POO)"
  },
  {
    "name": "Safe Or Well",
    "url": "",
    "category": "Projet perso",
    "link": "https://mrgove10.itch.io/safe-or-well",
    "imgColor": "sowLogo",
    "background": "",
    "finishDate": "16/03/19",
    "workTime": "2 Jours Non-Stop",
    "shortDescription": "Safe Or Well est un jeu réalisé dans une équipe de 6, lors de la Scientific Game Jam de Grenoble de 2019, où vous incarnez une personne malade, forcée d'utiliser les objets connectés pour l'aider dans sa vie. Mais va-t-elle accepter de rendre les données collectées accessible à son médecin et à son assurance ?"
  },
  {
    "name": "TEMA",
    "url": "",
    "category": "Projet d'école",
    "link": "https://tema.axsiow.ovh/",
    "imgColor": "tema",
    "background": "linear-gradient(to right top, #302e4e, #5f3569, #993070, #d02861, #f63d3d);",
    "finishDate": "13/02/2019",
    "workTime": "+30h",
    "shortDescription": "Conçu en groupe de 4 pendant un projet d'application web, TEMA est une plateforme collaborative qui a pour but d'aider les personnes souhaitant donner leur sang !"
  }
]
